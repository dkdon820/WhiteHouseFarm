<?xml version="1.0" encoding="utf-8"?>

<CustomShader version="3">
    <Parameters>
        <Parameter name = "colorScaleR"    target = "colorScaleR"    type = "float4"  defaultValue = "0.5000 0.5000 0.5000 1.0"  minValue = "0.0 0.0 0.0 0.0"          maxValue = "1.0 1.0 1.0 1.0"/>
        <Parameter name = "colorScaleG"    target = "colorScaleG"    type = "float4"  defaultValue = "0.2200 0.2500 0.4400 1.0"  minValue = "0.0 0.0 0.0 0.0"          maxValue = "1.0 1.0 1.0 1.0"/>
        <Parameter name = "colorScaleB"    target = "colorScaleB"    type = "float4"  defaultValue = "0.1000 0.1000 0.1000 1.0"  minValue = "0.0 0.0 0.0 0.0"          maxValue = "1.0 1.0 1.0 1.0"/>
    </Parameters>
    <Variations>
        <Variation name = "RGB_SPECULAR">
<![CDATA[
 /*
 glossMap.r - color mask
 glossMap.g - color mask
 glossMap.b - roughness ( specular intensity + specular power )
 */
    #define RGB_SPECULAR 
]]>
        </Variation>
    </Variations>
    <LodLevel startDistance = "0">
        <CodeInjections>
            <CodeInjection position = "SHARED_START">
<![CDATA[
#if defined( ALPHA_TESTED )
    #undef ALPHA_TESTED
    #define SUBSURFACE_SCATTERING
#endif
]]>
            </CodeInjection>
            <CodeInjection position = "MATERIALINFO">
<![CDATA[
    uniform float4 colorScaleR;
    uniform float4 colorScaleG;
    uniform float4 colorScaleB;
]]>
            </CodeInjection>
            <CodeInjection position = "FS_GLOBALS">
<![CDATA[
    float4 gGloss;
    float gThickness;
]]>
            </CodeInjection>
            <CodeInjection position = "START_FS">
<![CDATA[
 #if defined( GLOSS_MAP )
 /*
 glossMap.r - color mask
 glossMap.g - color mask
 glossMap.b - color mask
 glossMap.a - roughness ( specular intensity + specular power )
 */
    globals.gGloss = tex2D( glossMap, In.vs.GLOSSMAP_TEXCOORD).rgba;    
#endif
]]>
            </CodeInjection>
            <CodeInjection position = "POST_ALBEDO_FS">
<![CDATA[
#if defined( SUBSURFACE_SCATTERING )
    globals.gThickness = albedo.w;
#endif
#if defined( GLOSS_MAP )
    albedo.xyz = lerp( albedo.rgb, albedo.rgb * colorScaleR.rgb, globals.gGloss.r );
    albedo.xyz = lerp( albedo.rgb, albedo.rgb * colorScaleG.rgb, globals.gGloss.g );
    
    #if !defined(RGB_SPECULAR)
        albedo.xyz = lerp( albedo.rgb, albedo.rgb * colorScaleB.rgb, globals.gGloss.b );
    #endif   
#endif
]]>
            </CodeInjection>
            <CodeInjection position="POST_GET_LIGHTING_FS">
 <![CDATA[
 #if defined( SUBSURFACE_SCATTERING )
    float fLTAmbient =      0.15;
    float fLTPower =        2.0;
    float fLTDistortion =   1.0;
    float fLTScale =        2.0;

    float fLightAttenuation = saturate(dot(normal, lightDir)) + saturate(dot(viewDir, -lightDir));

    float3 vLTLight = lightDir + normal * fLTDistortion;
    float fLTDot = pow(saturate(dot(viewDir, -vLTLight)), fLTPower) * fLTScale;
    float fLT = fLightAttenuation * (fLTDot + fLTAmbient) * globals.gThickness;
    float3 cLT = diffuseColor * lightColor * fLT * float3( 0.938, 0.567, 0.567 );
                    
    lighting.xyz += cLT * lightAtten;
#endif
]]>
            </CodeInjection> 
            <CodeInjection position = "POST_GLOSS_COLOR_FS">
<![CDATA[
#if defined( GLOSS_MAP )
    float mGloss = 0.0;
    
    #if defined( RGB_SPECULAR )
        mGloss = globals.gGloss.b;
    #else
        mGloss = globals.gGloss.a;
    #endif
    
    mGloss = pow(mGloss,2.2);
    
    float cosPower = max(cCosPower * mGloss, 0.1);
    roughness = sqrt(sqrt(2.0/(cosPower+2.0)));
    glossColor.xyz = (float3)(mGloss);
    
#endif
]]>
            </CodeInjection>
        </CodeInjections>
    </LodLevel>
</CustomShader>